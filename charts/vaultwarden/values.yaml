# Override all names
nameOverride: ""
fullnameOverride: ""

# Bitwarden configuration.
# The below values are used to construct a config map, which will be provided
# to the vaultwarden container on start up.
# For details about the options, see: https://github.com/dani-garcia/vaultwarden#configuring-bitwarden-service
#
# Besides the options listed below, Rocket can be further configured (though it shouldn't be required).
# See: https://github.com/dani-garcia/vaultwarden#other-configuration
bitwarden:
  # # Allow registration of new users
  # # See: https://github.com/dani-garcia/vaultwarden#disable-registration-of-new-users
  # signups_allowed: true

  # # Allow current users invite new users even if registrations are otherwise disabled.
  # # See: https://github.com/dani-garcia/vaultwarden#disable-invitations
  # invitations_allowed: true

  # # Email of the unique server administrator account
  # # See: https://github.com/dani-garcia/vaultwarden#configure-server-administrator
  # server_admin_email: admin@example.com

  # # Websocket support for notifications
  # # See: https://github.com/dani-garcia/vaultwarden#enabling-websocket-notifications
  websocket_enabled: true
  websocket_port: 3012

  # # Needed for U2F authentification
  # # See: https://github.com/dani-garcia/vaultwarden#enabling-u2f-authentication
  # # TODO: Not supported currently
  # # TODO: Automatically template this into the ingress configuration
  # domain: https://bw.domain.tld

  # # Configuration of YubiKey OTP
  # # See: https://github.com/dani-garcia/vaultwarden#enabling-yubikey-otp-authentication
  # yubico_client_id: YUBICO_CLIENT_ID
  # yubico_secret_key: YUBICO_SECRET_KEY

  # # API request size limits
  # # See: https://github.com/dani-garcia/vaultwarden#changing-the-api-request-size-limit
  # rocket_limits: "{json=10485760}"

  # # Number of workers to spin up for the service
  # # See: https://github.com/dani-garcia/vaultwarden#changing-the-number-of-workers
  # rocket_workers: 10

  # Port to serve http requests on. Define it accordingly to the service's target_port
  rocket_port: 8080

  # # SMTP settings, for sending out emails
  # # See: https://github.com/dani-garcia/vaultwarden/blob/master/README.md#smtp-configuration
  # smtp_host: smtp.domain.tld
  # smtp_from: bitwarden@domain.tld
  # smtp_port: 587
  # smtp_ssl: true
  # smtp_username: username
  # smtp_password: password

  # Show password hint instead of sending it via email
  # See: https://github.com/dani-garcia/vaultwarden#password-hint-display
  show_password_hints: false

  # Enable Vault interface, when disabled, only API is served
  # See: https://github.com/dani-garcia/vaultwarden#disabling-or-overriding-the-vault-interface-hosting
  # TODO: enable settings web-vault content; init-container + shared storage + web-vault path?
  web_vault_enabled: true

  # # Logging to a specific file
  # # See: https://github.com/dani-garcia/vaultwarden#logging
  # log_file=/data/bitwarden.log



deployment:
  # Image used for the deployment
  # See: https://www.github.com/dani-garcia/vaultwarden
  image:
    repository: vaultwarden/server
    tag: 1.25.2
    pullPolicy: IfNotPresent
  # Resources, etc, for the deployment pod
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Passwords and sensitive data can also be provided via secrets. This can be used for ADMIN_TOKEN and SMTP_PASSWORD.
  # Just provide the names of your secret resources that are already deployed to your namespace.
  secrets: []

securityContext:
  enabled: true
  runAsNonRoot: true
  fsGroup: 1000
  runAsUser: 1000

# Should not be changed
service:
  type: LoadBalancer
  port: 80
  target_port: 8080


# Settings regarding persistent storage
# TODO: Support DATABASE_URL + ATTACHMENTS_FOLDER + ICON_CACHE_FOLDER
# See: https://github.com/dani-garcia/vaultwarden#changing-persistent-data-location
storage:
  # Whether storing persistent data is enabled or not
  enabled: true
  # Where to store persistent data
  path: "/data"
  # The maximum size of the persisted data
  size: 100Mi